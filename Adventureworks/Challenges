1) Retrieve customer data
-- Familiarize yourself with the SalesLT.Customer table by writing a Transact-SQL query that retrieves all columns for all customers.

SELECT * FROM SalesLT.Customer

2) Retrieve customer name data
-- Create a list of all customer contact names that includes the title, first
name, middle name (if any), last name, and suffix (if any) of all
customers.

SELECT Title,
FirstName, MiddleName, LastName,Suffix
FROM SALESLT.Customer

3) Retrieve customer names and phone numbers
-- Each customer has an assigned salesperson. You must write a query to
create a call sheet that lists:
The salesperson,
A column named CustomerName that displays how the customer contact should be greeted (for example, Mr Smith),
The customer’s phone number.
Remember to space out the CustomerName.

SELECT SalesPerson,
Title + ' ' + LastName as CustomerName, phone
FROM SalesLT.Customer

4) Retrieve a list of customer companies
-- You have been asked to provide a list of all customer companies in the format;
Customer ID : Company Name - for example, 78: Preferred Bikes.
Remember to convert Customer ID because we are building a string with an integer.

SELECT CAST(CustomerID AS varchar) + ': ' + CompanyName as CustomerCompany
FROM SalesLT.Customer

5) Retrieve a list of sales order revisions
-- The SalesLT.SalesOrderHeader table contains records of sales orders.
You have been asked to retrieve data for a report that shows:
§ The sales order number and revision number in the format () – for example SO71774 (2).
The order date converted to ANSI standard 102 format (yyyy.mm.dd – for example 2015.01.31).

SELECT SalesOrderNumber + ' (' + STR(RevisionNumber, 1) + ')' AS OrderRevision,
CONVERT(nvarchar(30), OrderDate, 102) AS OrderDate
FROM SalesLT.SalesOrderHeader

6) Retrieve customer contact names with middle names if known
-- You have been asked to write a query that returns a list of customer names. The list must consist of a single column in the format first
last (for example Keith Harris),or first
middle last (for example Jane M. Gates) if a middle name is known.

SELECT FirstName + ' ' + ISNULL(MiddleName, '') + ' ' + LastName AS CustomerContact
FROM SalesLT.Customer

7) Retrieve primary contact details
-- Customers may provide Adventure Works with an email address, a phone number, or both.
If an email address is available, then it should be used as the primary contact method; if not, then the phone number should be used.
You must write a query that returns a list of customer IDs in one column, and a second column named PrimaryContact that
contains the email address if known, and otherwise the phone number.
-- N.B : In the sample data provided, there are no customer records without an email address.
Therefore, to verify that our query works as expected, we update the data to remove
some existing email addresses before creating our query:

UPDATE SalesLT.Customer
 SET EmailAddress = NULL
 WHERE CustomerID % 7 = 1;

-- Now we run our query

 SELECT CustomerID,
 COALESCE(EmailAddress, Phone) AS CustomerContact
 FROM SalesLT.Customer

8) Retrieve shipping status
You have been asked to create a query that returns a list of sales order
IDs and order dates with a column named ShippingStatus that
contains the text "Shipped" for orders with a known ship date,
and "Awaiting Shipment" for orders with no ship date.
-- N.B There are no sales order header records without a ship date.
Therefore, to verify that our query works as expected, we update the data to remove
some existing ship dates before creating our query.

 UPDATE SalesLT.SalesOrderHeader
 SET ShipDate = NULL
 WHERE SalesOrderID > 71899

-- Now we run our query

SELECT SalesOrderID, CONVERT(nvarchar(30), OrderDate, 102) AS OrderDate,
CASE
WHEN ShipDate is NULL THEN 'Awaiting Shipment'
ELSE 'Shipped'
END AS ShippingStatus
FROM SalesLT.SalesOrderHeader
